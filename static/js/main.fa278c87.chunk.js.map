{"version":3,"sources":["components/CardItem/CardItem.js","components/Card/Card.js","components/Searchbox/Searchbox.js","components/Scroll/Scroll.js","components/ErrorBoundry/ErrorBoundry.js","container/App.js","reportWebVitals.js","index.js"],"names":["CardItem","id","name","email","className","src","alt","Card","robots","map","user","i","Searchbox","searchChange","type","onChange","placeholder","Scroll","props","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","catch","err","console","robotsComponent","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAYeA,EAVE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACvB,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,KACpD,oBAAIF,UAAU,YAAd,SAA2BF,IAC3B,mBAAGE,UAAU,aAAb,SAA2BD,QCoBxBI,EAzBF,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAOX,OACI,qBAAKJ,UAAU,qCAAf,SAEQI,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGV,UCP5BW,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,eAAf,SACI,uBAAOU,KAAK,SAASZ,KAAK,GAAGa,SAAUF,EAAcG,YAAY,qBAAqBZ,UAAU,oBCO7Fa,G,MARA,SAACC,GACZ,OACI,qBAAKd,UAAU,SAAf,SACKc,EAAMC,aCkBJC,E,kDApBX,WAAYF,GAAO,IAAD,8BACd,cAAMA,IACDG,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAGG,KAAKJ,MAAMC,SACH,oBAAIlB,UAAU,wBAAd,wCAGJqB,KAAKP,MAAMC,a,GAjBCQ,aCoDZC,G,wDA5Cb,aAAc,IAAD,8BACX,gBAQFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAR1C,EAAKZ,MAAQ,CACXb,OAAQ,GACRuB,YAAa,IAJJ,E,qDAab,WAAoB,IAAD,OACjBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAElB,OAAQ8B,OACtCC,OAAM,SAAAC,GAAG,OAAIC,QAAQlB,MAAMiB,Q,oBAI9B,WACE,MAA8Bf,KAAKJ,MAA5Bb,EAAP,EAAOA,OAAQuB,EAAf,EAAeA,YAETW,EAAkBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASf,EAAYc,kBAGvD,OAAQrC,EAAOuC,OAEb,gCACE,qBAAK3C,UAAU,YAAf,SACE,oBAAIA,UAAU,sBAAd,2BAEF,cAAC,EAAD,CAAWS,aAAcY,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAMrB,OAAQkC,WARpB,oBAAItC,UAAU,8BAAd,4B,GAhCYuB,cCKHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fa278c87.chunk.js","sourcesContent":["import './CardItem.css';\r\n\r\nconst CardItem = ({id,name,email}) => {\r\n    return (\r\n        <div className=\"card tc\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"\" />\r\n            <h2 className=\"display-3\">{name}</h2>\r\n            <p className=\"text-muted\">{email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardItem;","import CardItem from '../CardItem/CardItem';\r\n\r\nconst Card = ({robots}) => {\r\n\r\n    // if(true){\r\n    //     throw new Error('Error occur.');\r\n    // }\r\n\r\n\r\n    return (\r\n        <div className=\"d-grid-template-3 container mt-100\">\r\n            {\r\n                robots.map((user,i) => {\r\n                    return (\r\n                        <CardItem \r\n                            key={robots[i].id}\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","const Searchbox = ({searchChange}) => {\r\n    return(\r\n        <div className=\"tc searchbox\">\r\n            <input type=\"search\" name=\"\" onChange={searchChange} placeholder=\"Searching robot...\" className=\"form-control\" />  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox;","import './Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className=\"scroll\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1 className=\"text-center sega-font\">Ops! something went wrong.</h1>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Card from '../components/Card/Card';\nimport Searchbox from '../components/Searchbox/Searchbox';\nimport Scroll from '../components/Scroll/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n\n  // Foi construÃ­do\n  constructor(){\n    super();\n    this.state = {\n      robots: [],\n      searchField: ''\n    }\n  }\n\n  // Foi montado\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ robots: users }))\n    .catch(err => console.error(err));\n  }\n\n  // Rederizado\n  render(){\n    const {robots, searchField} = this.state;\n    \n    const robotsComponent = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n\n    return !robots.length ? \n      <h1 className=\"sega-font text-center mt-20\">Loading...</h1>\n    : <div>\n        <div className=\"tc mt-100\">\n          <h1 className=\"display-1 sega-font\">Robotfriend</h1>\n        </div>\n        <Searchbox searchChange={this.onSearchChange}/>\n        <Scroll>\n          <ErrorBoundry>\n            <Card robots={robotsComponent}/>\n          </ErrorBoundry>\n        </Scroll>\n      </div>  \n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}